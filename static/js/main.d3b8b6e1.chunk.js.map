{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["accurateInterval","fn","time","cancel","nextAt","timeout","wrapper","Date","getTime","setTimeout","clearTimeout","TimerLengthControl","className","id","this","props","titleID","title","minID","onClick","value","lengthID","length","addID","React","Component","App","state","brkLength","seshLength","timerState","timerType","timer","intervalID","alarmColor","color","setBrkLength","bind","setSeshLength","lengthControl","timerControl","beginCountDown","decrementTimer","phaseControl","warning","buzzer","switchTimer","clockify","reset","e","currentTarget","stateToChange","sign","currentLength","setState","_timer","audioBeep","play","num","str","minutes","Math","floor","seconds","pause","currentTime","preload","ref","audio","src","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2PAIMA,EAAmB,SAAUC,EAAIC,GACrC,IAAIC,EAAQC,EAAQC,EAASC,EAY7B,OAXAF,GAAS,IAAIG,MAAOC,UAAYN,EAChCG,EAAU,KACVC,EAAU,WAGR,OAFAF,GAAUF,EACVG,EAAUI,WAAWH,EAASF,GAAS,IAAIG,MAAOC,WAC3CP,KAETE,EAAS,WACP,OAAOO,aAAaL,IAEtBA,EAAUI,WAAWH,EAASF,GAAS,IAAIG,MAAOC,WAC3C,CACLL,OAAQA,IAKNQ,E,4JACJ,WACE,OACE,sBAAKC,UAAU,iBAAf,UACE,qBAAKC,GAAIC,KAAKC,MAAMC,QAApB,SAA8BF,KAAKC,MAAME,QACzC,sBAAKL,UAAU,cAAf,UAA6B,wBAC3BA,UAAU,UACVC,GAAIC,KAAKC,MAAMG,MACfC,QAASL,KAAKC,MAAMI,QACpBC,MAAM,IAJqB,oBAQ7B,qBAAKR,UAAU,GAAGC,GAAIC,KAAKC,MAAMM,SAAjC,SACGP,KAAKC,MAAMO,SAEd,wBACEV,UAAU,UACVC,GAAIC,KAAKC,MAAMQ,MACfJ,QAASL,KAAKC,MAAMI,QACpBC,MAAM,IAJR,8B,GAhByBI,IAAMC,WA6NxBC,E,kDA5Lb,WAAYX,GAAO,IAAD,8BAChB,cAAMA,IACDY,MAAQ,CACXC,UAAW,EACXC,WAAY,GACZC,WAAY,UACZC,UAAW,UACXC,MAAO,KACPC,WAAY,GACZC,WAAY,CAAEC,MAAO,UAEvB,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,cAAgB,EAAKA,cAAcD,KAAnB,gBACrB,EAAKE,cAAgB,EAAKA,cAAcF,KAAnB,gBACrB,EAAKG,aAAe,EAAKA,aAAaH,KAAlB,gBACpB,EAAKI,eAAiB,EAAKA,eAAeJ,KAApB,gBACtB,EAAKK,eAAiB,EAAKA,eAAeL,KAApB,gBACtB,EAAKM,aAAe,EAAKA,aAAaN,KAAlB,gBACpB,EAAKO,QAAU,EAAKA,QAAQP,KAAb,gBACf,EAAKQ,OAAS,EAAKA,OAAOR,KAAZ,gBACd,EAAKS,YAAc,EAAKA,YAAYT,KAAjB,gBACnB,EAAKU,SAAW,EAAKA,SAASV,KAAd,gBAChB,EAAKW,MAAQ,EAAKA,MAAMX,KAAX,gBAtBG,E,gDAwBlB,SAAaY,GACXnC,KAAKyB,cACH,YACAU,EAAEC,cAAc9B,MAChBN,KAAKa,MAAMC,UACX,a,2BAGJ,SAAcqB,GACZnC,KAAKyB,cACH,aACAU,EAAEC,cAAc9B,MAChBN,KAAKa,MAAME,WACX,W,2BAGJ,SAAcsB,EAAeC,EAAMC,EAAetB,GAChD,GAA8B,YAA1BjB,KAAKa,MAAMG,WAGf,GAAIhB,KAAKa,MAAMI,YAAcA,EACd,MAATqB,GAAkC,IAAlBC,EAClBvC,KAAKwC,SAAL,eAAiBH,EAAgBE,EAAgB,IAC/B,MAATD,GAAkC,KAAlBC,GACzBvC,KAAKwC,SAAL,eAAiBH,EAAgBE,EAAgB,SAE9C,GAAa,MAATD,GAAkC,IAAlBC,EAAqB,CAAC,IAAD,EAC9CvC,KAAKwC,UAAL,mBACGH,EAAgBE,EAAgB,GADnC,sBAEyB,GAAhBA,EAAqB,IAF9B,SAIK,GAAa,MAATD,GAAkC,KAAlBC,EAAsB,CAAC,IAAD,EAC/CvC,KAAKwC,UAAL,mBACGH,EAAgBE,EAAgB,GADnC,sBAEyB,GAAhBA,EAAqB,IAF9B,O,0BAMJ,WACgC,YAA1BvC,KAAKa,MAAMG,YACbhB,KAAK2B,iBACL3B,KAAKwC,SAAS,CAAExB,WAAY,cAE5BhB,KAAKwC,SAAS,CAAExB,WAAY,YACxBhB,KAAKa,MAAMM,YACbnB,KAAKa,MAAMM,WAAW9B,Y,4BAI5B,WAAkB,IAAD,OACfW,KAAKwC,SAAS,CACZrB,WAAYjC,GAAiB,WAC3B,EAAK0C,iBACL,EAAKC,iBACJ,S,4BAGP,WACE7B,KAAKwC,SAAS,CAAEtB,MAAOlB,KAAKa,MAAMK,MAAQ,M,0BAE5C,WACE,IAAIA,EAAQlB,KAAKa,MAAMK,MACvBlB,KAAK8B,QAAQZ,GACblB,KAAK+B,OAAOb,GACRA,EAAQ,IACNlB,KAAKa,MAAMM,YACbnB,KAAKa,MAAMM,WAAW9B,SAEK,YAAzBW,KAAKa,MAAMI,WACbjB,KAAK2B,iBACL3B,KAAKgC,YAAmC,GAAvBhC,KAAKa,MAAMC,UAAgB,WAE5Cd,KAAK2B,iBACL3B,KAAKgC,YAAoC,GAAxBhC,KAAKa,MAAME,WAAiB,e,qBAInD,SAAQ0B,GACFA,EAAS,GACXzC,KAAKwC,SAAS,CAAEpB,WAAY,CAAEC,MAAO,aAErCrB,KAAKwC,SAAS,CAAEpB,WAAY,CAAEC,MAAO,a,oBAGzC,SAAOoB,GACU,IAAXA,GACFzC,KAAK0C,UAAUC,S,yBAGnB,SAAYC,EAAKC,GACf7C,KAAKwC,SAAS,CACZtB,MAAO0B,EACP3B,UAAW4B,EACXzB,WAAY,CAAEC,MAAO,a,sBAGzB,WACE,IAAIyB,EAAUC,KAAKC,MAAMhD,KAAKa,MAAMK,MAAQ,IACxC+B,EAAUjD,KAAKa,MAAMK,MAAkB,GAAV4B,EAGjC,OADAA,EAAUA,EAAU,GAAK,IAAMA,EAAUA,GACxB,KAFjBG,EAAUA,EAAU,GAAK,IAAMA,EAAUA,K,mBAI3C,WACEjD,KAAKwC,SAAS,CACZ1B,UAAW,EACXC,WAAY,GACZC,WAAY,UACZC,UAAW,UACXC,MAAO,KACPC,WAAY,GACZC,WAAY,CAAEC,MAAO,WAEnBrB,KAAKa,MAAMM,YACbnB,KAAKa,MAAMM,WAAW9B,SAExBW,KAAK0C,UAAUQ,QACflD,KAAK0C,UAAUS,YAAc,I,oBAG/B,WAAS,IAAD,OACN,OACA,sBAAKpD,GAAG,UAAR,UACI,sBAAKA,GAAG,YAAR,UACE,cAAC,EAAD,CACAU,MAAM,kBACND,OAAQR,KAAKa,MAAMC,UACnBP,SAAS,eACTH,MAAM,kBACNC,QAASL,KAAKsB,aACdnB,MAAM,eACND,QAAQ,gBAEV,cAAC,EAAD,CACEO,MAAM,oBACND,OAAQR,KAAKa,MAAME,WACnBR,SAAS,iBACTH,MAAM,oBACNC,QAASL,KAAKwB,cACdrB,MAAM,iBACND,QAAQ,qBAGV,sBAAKH,GAAG,QAAR,UACE,qBAAKA,GAAG,cAAR,SAAuBC,KAAKa,MAAMI,YAClC,qBAAKlB,GAAG,YAAR,SAAqBC,KAAKiC,gBAE5B,sBAAKnC,UAAU,gBAAf,UACE,wBAAQO,QAASL,KAAK0B,aAAc3B,GAAG,aAAvC,wBACA,wBAAQM,QAASL,KAAKkC,MAAOnC,GAAG,QAAhC,sBAEF,uBACEA,GAAG,OACHqD,QAAQ,OACRC,IAAK,SAACC,GACJ,EAAKZ,UAAYY,GAEnBC,IAAI,qH,GAtLI7C,IAAMC,WC3CT6C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d3b8b6e1.chunk.js","sourcesContent":["import './App.css';\nimport React from 'react';\n\n\nconst accurateInterval = function (fn, time) {\n  var cancel, nextAt, timeout, wrapper;\n  nextAt = new Date().getTime() + time;\n  timeout = null;\n  wrapper = function () {\n    nextAt += time;\n    timeout = setTimeout(wrapper, nextAt - new Date().getTime());\n    return fn();\n  };\n  cancel = function () {\n    return clearTimeout(timeout);\n  };\n  timeout = setTimeout(wrapper, nextAt - new Date().getTime());\n  return {\n    cancel: cancel\n  };\n};\n\n\nclass TimerLengthControl extends React.Component {\n  render() {\n    return (\n      <div className=\"length-control\">\n        <div id={this.props.titleID}>{this.props.title}</div>\n        <div className=\"num-up-down\"><button\n          className=\"buttons\"\n          id={this.props.minID}\n          onClick={this.props.onClick}\n          value=\"-\"\n        >\n          &#10506;\n        </button>\n        <div className=\"\" id={this.props.lengthID}>\n          {this.props.length}\n        </div>\n        <button\n          className=\"buttons\"\n          id={this.props.addID}\n          onClick={this.props.onClick}\n          value=\"+\"\n        >\n          &#10507;\n        </button>\n        </div>\n      </div>\n    );\n  }\n}\n\n\n\nclass App extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      brkLength: 5,\n      seshLength: 25,\n      timerState: 'stopped',\n      timerType: 'Session',\n      timer: 1500,\n      intervalID: '',\n      alarmColor: { color: 'white' }\n    };\n    this.setBrkLength = this.setBrkLength.bind(this);\n    this.setSeshLength = this.setSeshLength.bind(this);\n    this.lengthControl = this.lengthControl.bind(this);\n    this.timerControl = this.timerControl.bind(this);\n    this.beginCountDown = this.beginCountDown.bind(this);\n    this.decrementTimer = this.decrementTimer.bind(this);\n    this.phaseControl = this.phaseControl.bind(this);\n    this.warning = this.warning.bind(this);\n    this.buzzer = this.buzzer.bind(this);\n    this.switchTimer = this.switchTimer.bind(this);\n    this.clockify = this.clockify.bind(this);\n    this.reset = this.reset.bind(this);\n  }\n  setBrkLength(e) {\n    this.lengthControl(\n      'brkLength',\n      e.currentTarget.value,\n      this.state.brkLength,\n      'Session'\n    );\n  }\n  setSeshLength(e) {\n    this.lengthControl(\n      'seshLength',\n      e.currentTarget.value,\n      this.state.seshLength,\n      'Break'\n    );\n  }\n  lengthControl(stateToChange, sign, currentLength, timerType) {\n    if (this.state.timerState === 'running') {\n      return;\n    }\n    if (this.state.timerType === timerType) {\n      if (sign === '-' && currentLength !== 1) {\n        this.setState({ [stateToChange]: currentLength - 1 });\n      } else if (sign === '+' && currentLength !== 60) {\n        this.setState({ [stateToChange]: currentLength + 1 });\n      }\n    } else if (sign === '-' && currentLength !== 1) {\n      this.setState({\n        [stateToChange]: currentLength - 1,\n        timer: currentLength * 60 - 60\n      });\n    } else if (sign === '+' && currentLength !== 60) {\n      this.setState({\n        [stateToChange]: currentLength + 1,\n        timer: currentLength * 60 + 60\n      });\n    }\n  }\n  timerControl() {\n    if (this.state.timerState === 'stopped') {\n      this.beginCountDown();\n      this.setState({ timerState: 'running' });\n    } else {\n      this.setState({ timerState: 'stopped' });\n      if (this.state.intervalID) {\n        this.state.intervalID.cancel();\n      }\n    }\n  }\n  beginCountDown() {\n    this.setState({\n      intervalID: accurateInterval(() => {\n        this.decrementTimer();\n        this.phaseControl();\n      }, 1000)\n    });\n  }\n  decrementTimer() {\n    this.setState({ timer: this.state.timer - 1 });\n  }\n  phaseControl() {\n    let timer = this.state.timer;\n    this.warning(timer);\n    this.buzzer(timer);\n    if (timer < 0) {\n      if (this.state.intervalID) {\n        this.state.intervalID.cancel();\n      }\n      if (this.state.timerType === 'Session') {\n        this.beginCountDown();\n        this.switchTimer(this.state.brkLength * 60, 'Break');\n      } else {\n        this.beginCountDown();\n        this.switchTimer(this.state.seshLength * 60, 'Session');\n      }\n    }\n  }\n  warning(_timer) {\n    if (_timer < 61) {\n      this.setState({ alarmColor: { color: '#a50d0d' } });\n    } else {\n      this.setState({ alarmColor: { color: 'white' } });\n    }\n  }\n  buzzer(_timer) {\n    if (_timer === 0) {\n      this.audioBeep.play();\n    }\n  }\n  switchTimer(num, str) {\n    this.setState({\n      timer: num,\n      timerType: str,\n      alarmColor: { color: 'white' }\n    });\n  }\n  clockify() {\n    let minutes = Math.floor(this.state.timer / 60);\n    let seconds = this.state.timer - minutes * 60;\n    seconds = seconds < 10 ? '0' + seconds : seconds;\n    minutes = minutes < 10 ? '0' + minutes : minutes;\n    return minutes + ':' + seconds;\n  }\n  reset() {\n    this.setState({\n      brkLength: 5,\n      seshLength: 25,\n      timerState: 'stopped',\n      timerType: 'Session',\n      timer: 1500,\n      intervalID: '',\n      alarmColor: { color: 'white' }\n    });\n    if (this.state.intervalID) {\n      this.state.intervalID.cancel();\n    }\n    this.audioBeep.pause();\n    this.audioBeep.currentTime = 0;\n  }\n  \n  render(){\n    return(\n    <div id=\"wrapper\">\n        <div id=\"container\">\n          <TimerLengthControl\n          addID=\"break-increment\"\n          length={this.state.brkLength}\n          lengthID=\"break-length\"\n          minID=\"break-decrement\"\n          onClick={this.setBrkLength}\n          title=\"Break Length\"\n          titleID=\"break-label\"\n        />\n        <TimerLengthControl\n          addID=\"session-increment\"\n          length={this.state.seshLength}\n          lengthID=\"session-length\"\n          minID=\"session-decrement\"\n          onClick={this.setSeshLength}\n          title=\"Session Length\"\n          titleID=\"session-label\"\n        />\n      </div>\n        <div id=\"timer\">\n          <div id=\"timer-label\">{this.state.timerType}</div>\n          <div id=\"time-left\">{this.clockify()}</div>\n        </div>\n        <div className=\"timer-control\">\n          <button onClick={this.timerControl} id=\"start_stop\">start/stop</button>\n          <button onClick={this.reset} id=\"reset\">reset</button>\n        </div>\n        <audio\n          id=\"beep\"\n          preload=\"auto\"\n          ref={(audio) => {\n            this.audioBeep = audio;\n          }}\n          src=\"https://raw.githubusercontent.com/freeCodeCamp/cdn/master/build/testable-projects-fcc/audio/BeepSound.wav\"\n        />\n    </div>)\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}